name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, reopened]
jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    env:
      MOCKPASS_PORT: 5156
      SHOW_LOGIN_PAGE: true
      MOCKPASS_NRIC: S8979373D
      SIGN_ASSERTION: false
      ENCRYPT_ASSERTION: false
      SIGN_RESPONSE: false
      RESOLVE_ARTIFACT_REQUEST_SIGNED: false
      ENCRYPT_MYINFO: false
      SERVICE_PROVIDER_MYINFO_SECRET: ${{ secrets.SERVICE_PROVIDER_MYINFO_SECRET }}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - run: npm ci
      - run: npm install
      - run: npx lockfile-lint --type npm --path package-lock.json --validate-https --allowed-hosts npm
      - run: npm run lint
  
  docker:
    name: Deploy to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: UnitTest ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present

      - name: Login Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
        id: buildx

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        id: docker_build
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}

      - name: Verify
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: SSH deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
           ./build.sh
